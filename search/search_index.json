{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Termynal","text":"<p>A lightweight and modern animated terminal window. Built for mkdocs.</p>"},{"location":"#installation","title":"Installation","text":"<p> pip install termynal Installed </p> <p>Example</p>"},{"location":"#usage","title":"Usage","text":"<p>Use <code>&lt;!-- termynal --&gt;</code> before code block</p> <pre><code>&lt;!-- termynal --&gt;\n\n```\n// code\n```\n</code></pre> <p>or <code>console</code> in code block</p> <pre><code>```console\n// code\n```\n</code></pre> <p> // code </p> <p>progress, prompt <code>---&gt; 100%</code></p> <pre><code>```\n$ show progress\n---&gt; 100%\nDone!\n```\n</code></pre> <p> show progress Done! </p> <p>command, start with <code>$</code></p> <pre><code>```console\n$ command\n```\n</code></pre> <p> command </p> <p>comment, start with <code>#</code></p> <pre><code>```console\n# comment\n```\n</code></pre> <p> comment </p> <p><code>mkdocs</code> plugin</p> <pre><code>...\nplugins:\n- termynal\n...\n</code></pre> <p>Thanks ines</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#v040-2023-07-06","title":"v0.4.0 (2023-07-06)","text":""},{"location":"changelog/#feat","title":"Feat","text":"<ul> <li>make the processor configurable to customize termynal.js behavior (#6)</li> </ul>"},{"location":"changelog/#v031-2023-06-21","title":"v0.3.1 (2023-06-21)","text":""},{"location":"changelog/#fix","title":"Fix","text":"<ul> <li>check content type to avoid processing errors (#5)</li> </ul>"},{"location":"changelog/#v030-2023-05-09","title":"v0.3.0 (2023-05-09)","text":""},{"location":"changelog/#feat_1","title":"Feat","text":"<ul> <li>add \"restart\" and \"faster\" button to animation in termynal</li> </ul>"},{"location":"changelog/#v022-2023-02-01","title":"v0.2.2 (2023-02-01)","text":""},{"location":"changelog/#refactor","title":"Refactor","text":"<ul> <li>update linters</li> </ul>"},{"location":"changelog/#v021-2020-11-17","title":"v0.2.1 - 2020-11-17","text":""},{"location":"changelog/#other","title":"Other","text":"<ul> <li>Use mkdocs ^1.4</li> </ul>"},{"location":"changelog/#v020-2020-11-17","title":"v0.2.0 - 2020-11-17","text":""},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Added <code>&lt;!-- termynal --&gt;</code></li> <li>Added <code>console</code> =&gt; <code>class=\"language-console\"</code></li> </ul>"},{"location":"changelog/#v010-2020-11-14","title":"v0.1.0 - 2020-11-14","text":"<ul> <li>init</li> </ul>"},{"location":"code-of-conduct/","title":"Code of Conduct","text":"<p>This project adheres to the Python Code of Conduct, which can be found here.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.</p> <p>Welcome! Happy to see you willing to make the project better.</p>"},{"location":"contributing/#getting-started","title":"Getting started","text":""},{"location":"contributing/#install","title":"Install","text":"<p>Install poetry</p> <pre><code>make install-poetry\n# pip install poetry\n</code></pre> <ul> <li>don't forget to use the last version of poetry</li> <li>don't forget to write a code for python 3.8+</li> <li>don't forget to use virtualenv</li> <li>For using venv in the project directory, run <code>poetry config virtualenvs.in-project true</code></li> </ul> <p>Install dependencies</p> <pre><code>make install\n</code></pre>"},{"location":"contributing/#run-tests","title":"Run tests","text":"<pre><code>make test\n</code></pre>"},{"location":"contributing/#formatting","title":"Formatting","text":"<pre><code>make format\n</code></pre>"},{"location":"contributing/#lint","title":"Lint","text":"<pre><code>make lint\n</code></pre>"},{"location":"contributing/#release","title":"Release","text":"<p>Automatically after merging with the master</p> <ol> <li><code>make bump</code></li> <li><code>git push</code> and <code>git push --tags</code></li> </ol>"},{"location":"contributing/#commit-message-format","title":"Commit Message Format","text":"<p>This project adheres to Conventional Commits. A specification for adding human and machine readable meaning to commit messages.</p>"},{"location":"contributing/#commit-message-header","title":"Commit Message Header","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;short summary&gt;\n  \u2502       \u2502             \u2502\n  \u2502       \u2502             \u2514\u2500\u2af8 Summary in present tense. Not capitalized. No period at the end.\n  \u2502       \u2502\n  \u2502       \u2514\u2500\u2af8 Commit Scope\n  \u2502\n  \u2514\u2500\u2af8 Commit Type: feat|fix|build|ci|docs|perf|refactor|test|chore\n</code></pre>"},{"location":"contributing/#type","title":"Type","text":"type name description feat Features A new feature fix Bug Fixes A bug fix docs Documentation Documentation only changes style Styles Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor Code Refactoring A code change that neither fixes a bug nor adds a feature perf Performance Improvements A code change that improves performance test Tests Adding missing tests or correcting existing tests build Builds Changes that affect the build system or external dependencies (example scopes: mypy, pip, pytest) ci Continuous Integrations Changes to our CI configuration files and scripts (example scopes: Github Actions) chore Chores Other changes that don't modify src or test files revert Reverts Reverts a previous commit"}]}